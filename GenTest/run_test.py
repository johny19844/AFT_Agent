from test_generator import SimpleAITestGenerator
from multi_page_generator import MultiPageTestGenerator
import os
import sys

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    try:
        import selenium
        import llama_cpp
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {e}")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    return True

def check_local_model():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏"""
    from config import Config
    
    config = Config()
    if config.AI_PROVIDER == "local":
        if not os.path.exists(config.LOCAL_MODEL_PATH):
            print(f"‚ùå –õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {config.LOCAL_MODEL_PATH}")
            print("\nüì• –ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
            print("mkdir models")
            print("wget -O models/codellama-7b.q4_0.gguf https://huggingface.co/TheBloke/CodeLlama-7B-GGUF/resolve/main/codellama-7b.q4_0.gguf")
            print("\n–ò–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –º–æ–¥–µ–ª–∏ –≤ .env —Ñ–∞–π–ª–µ")
            return False
        else:
            print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞: {config.LOCAL_MODEL_PATH}")
            return True
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º OpenAI –∫–ª—é—á
        api_key = os.getenv('OPENAI_API_KEY')
        if not api_key or api_key == 'your-api-key-here':
            print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω OpenAI API –∫–ª—é—á")
            print("üîë –î–æ–±–∞–≤—å—Ç–µ OPENAI_API_KEY –≤ .env —Ñ–∞–π–ª")
            return False
        else:
            print("‚úÖ OpenAI API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True

def show_welcome():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    print("üéØ AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ-—Ç–µ—Å—Ç–æ–≤")
    print("=" * 50)
    print("ü§ñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: OpenAI GPT –ò–õ–ò –ª–æ–∫–∞–ª—å–Ω—ã–µ GGUF –º–æ–¥–µ–ª–∏")
    print("üåê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü")
    print("üíª –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤—ã—Ö Selenium —Ç–µ—Å—Ç–æ–≤")
    print("=" * 50)

def select_test_type():
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ —Ç–µ—Å—Ç–∞"""
    print("\nüìã –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–µ—Å—Ç–∞:")
    print("1. üü¢ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç (–æ–¥–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)")
    print("2. üîµ –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ç–µ—Å—Ç (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü)")
    print("3. ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
    print("4. ‚ùå –í—ã—Ö–æ–¥")
    
    while True:
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ").strip()
        if choice in ['1', '2', '3', '4']:
            return choice
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ 1, 2, 3 –∏–ª–∏ 4")

def run_simple_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞"""
    print("\nüü¢ –†–ï–ñ–ò–ú: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç (–æ–¥–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)")
    print("-" * 40)
    
    generator = SimpleAITestGenerator()
    
    try:
        print("\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞:")
        url = input("URL —Å–∞–π—Ç–∞: ").strip()
        if not url.startswith(('http://', 'https://')):
            url = 'https://' + url
        
        scenario = input("–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞: ").strip()
        if not scenario:
            scenario = "—Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"
        
        filename = input("–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: test_login.py): ").strip()
        if not filename:
            filename = "generated_test.py"
        if not filename.endswith('.py'):
            filename += '.py'
        
        print(f"\nüîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ—Å—Ç...")
        print(f"üåê –°–∞–π—Ç: {url}")
        print(f"üéØ –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario}")
        print(f"üíæ –§–∞–π–ª: {filename}")
        print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç
        test_code = generator.generate_simple_test(scenario, url)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç
        saved_path = generator.save_test(test_code, filename)
        
        print(f"\n‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"üìÅ –§–∞–π–ª: {saved_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä: {len(test_code)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
        run_test = input("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç —Å–µ–π—á–∞—Å? (y/n): ").strip().lower()
        if run_test == 'y':
            print("\nüîß –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç...")
            print("-" * 40)
            try:
                exec(compile(test_code, saved_path, 'exec'))
                print("-" * 40)
                print("üéâ –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: {e}")
                print("üí° –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
        open_file = input("\nüìÇ –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–æ–º? (y/n): ").strip().lower()
        if open_file == 'y':
            try:
                if os.name == 'nt':  # Windows
                    os.system(f'notepad "{saved_path}"')
                else:  # Linux/Mac
                    os.system(f'xdg-open "{saved_path}"')
            except:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
    finally:
        generator.close()

def run_multi_page_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"""
    print("\nüîµ –†–ï–ñ–ò–ú: –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ç–µ—Å—Ç")
    print("-" * 40)
    
    generator = MultiPageTestGenerator()
    
    try:
        print("\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞:")
        url = input("–°—Ç–∞—Ä—Ç–æ–≤—ã–π URL: ").strip()
        if not url.startswith(('http://', 'https://')):
            url = 'https://' + url
        
        print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:")
        print("‚Ä¢ '–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤–æ–π—Ç–∏, –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'")
        print("‚Ä¢ '–Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏, –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'")
        print("‚Ä¢ '–∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'")
        
        scenario = input("\n–û–ø–∏—à–∏—Ç–µ –≤–∞—à —Å—Ü–µ–Ω–∞—Ä–∏–π: ").strip()
        if not scenario:
            scenario = "–ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞–π—Ç–∞"
        
        filename = input("–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∞: ").strip()
        if not filename:
            filename = "multi_page_test.py"
        if not filename.endswith('.py'):
            filename += '.py'
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        test_function_name = filename.replace('.py', '').replace(' ', '_')
        
        print(f"\nüîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ç–µ—Å—Ç...")
        print(f"üåê –°—Ç–∞—Ä—Ç: {url}")
        print(f"üìã –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario}")
        print(f"üíæ –§–∞–π–ª: {filename}")
        print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç
        test_code = generator.generate_multi_page_test(scenario, url, test_function_name)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç
        saved_path = generator.save_test(test_code, filename)
        
        print(f"\n‚úÖ –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ç–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"üìÅ –§–∞–π–ª: {saved_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä: {len(test_code)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üî¢ –®–∞–≥–æ–≤: {test_code.count('# –®–∞–≥')}")
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
        run_test = input("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç —Å–µ–π—á–∞—Å? (y/n): ").strip().lower()
        if run_test == 'y':
            print("\nüîß –ó–∞–ø—É—Å–∫–∞—é –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ç–µ—Å—Ç...")
            print("-" * 40)
            try:
                exec(compile(test_code, saved_path, 'exec'))
                print("-" * 40)
                print("üéâ –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Ç–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: {e}")
                print("üí° –°–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä—É—á–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è")
    finally:
        generator.close()

def show_settings():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""
    from config import Config
    
    config = Config()
    
    print("\n‚öôÔ∏è  –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´")
    print("-" * 40)
    print(f"ü§ñ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {config.AI_PROVIDER}")
    
    if config.AI_PROVIDER == "local":
        print(f"üìÅ –õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å: {config.LOCAL_MODEL_PATH}")
        if os.path.exists(config.LOCAL_MODEL_PATH):
            file_size = os.path.getsize(config.LOCAL_MODEL_PATH) / (1024**3)  # GB
            print(f"üìä –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏: {file_size:.2f} GB")
        else:
            print("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print(f"üåê OpenAI –º–æ–¥–µ–ª—å: {config.OPENAI_MODEL}")
    
    print(f"üåê –ë—Ä–∞—É–∑–µ—Ä: {config.BROWSER}")
    print(f"üëª Headless —Ä–µ–∂–∏–º: {config.HEADLESS}")
    print(f"‚è±Ô∏è –¢–∞–π–º–∞—É—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {config.PAGE_LOAD_TIMEOUT} —Å–µ–∫")
    print(f"üìÅ –ü–∞–ø–∫–∞ —Ç–µ—Å—Ç–æ–≤: {config.GENERATED_TESTS_DIR}")
    
    print("\nüìã –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ:")
    print("1. –§–∞–π–ª .env - –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("2. –§–∞–π–ª config.py - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")

def show_examples():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    print("\nüìö –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø")
    print("-" * 40)
    
    print("\nüü¢ –ü–†–û–°–¢–´–ï –¢–ï–°–¢–´:")
    print("URL: https://demoqa.com/login")
    print("–°—Ü–µ–Ω–∞—Ä–∏–π: '—Ç–µ—Å—Ç –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'")
    print("‚Üí –°–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    print("\nURL: https://www.saucedemo.com")
    print("–°—Ü–µ–Ω–∞—Ä–∏–π: '–ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤'") 
    print("‚Üí –°–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
    
    print("\nüîµ –ú–ù–û–ì–û–°–¢–†–ê–ù–ò–ß–ù–´–ï –¢–ï–°–¢–´:")
    print("URL: https://demoblaze.com")
    print("–°—Ü–µ–Ω–∞—Ä–∏–π: '–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤–æ–π—Ç–∏, –≤—ã–±—Ä–∞—Ç—å –Ω–æ—É—Ç–±—É–∫, –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'")
    print("‚Üí –°–æ–∑–¥–∞—Å—Ç –ø–æ–ª–Ω—ã–π e-commerce —Ç–µ—Å—Ç")
    
    print("\nURL: https://demoqa.com/automation-practice-form")
    print("–°—Ü–µ–Ω–∞—Ä–∏–π: '–∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —à–∞–≥–∞–º'")
    print("‚Üí –°–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç —Å–ª–æ–∂–Ω–æ–π —Ñ–æ—Ä–º—ã")
    
    print("\nüí° –°–û–í–ï–¢–´:")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ-—Å–∞–π—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
    print("‚Ä¢ –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    show_welcome()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not check_environment():
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å/–∫–ª—é—á
    if not check_local_model():
        return
    
    # –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
    while True:
        try:
            choice = select_test_type()
            
            if choice == '1':
                run_simple_test()
            elif choice == '2':
                run_multi_page_test()
            elif choice == '3':
                show_settings()
            elif choice == '4':
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
        except KeyboardInterrupt:
            print("\n\nüëã –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")

if __name__ == "__main__":
    main()