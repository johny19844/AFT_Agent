#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≥–µ–Ω—Ç–∞ v0.2
"""

import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_agent_configuration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞ v0.2"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞ v0.2...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    github_token = os.getenv('GITHUB_TOKEN', 'your_github_token_here')
    github_username = os.getenv('GITHUB_USERNAME', 'johny19844')
    scenario_repo = os.getenv('SCENARIO_REPO', 'johny19844/scenario')
    aft_repo = os.getenv('AFT_REPO', 'johny19844/AFT')
    model_path = os.getenv('MODEL_PATH', './models/yandex-gpt.gguf')
    
    print(f"üìù GitHub Token: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if github_token != 'your_github_token_here' else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"üë§ GitHub Username: {github_username}")
    print(f"üìÇ Scenario Repo: {scenario_repo}")
    print(f"üìÇ AFT Repo: {aft_repo}")
    print(f"ü§ñ Model Path: {model_path}")
    print(f"üìÅ Model Exists: {'‚úÖ –î–∞' if os.path.exists(model_path) else '‚ùå –ù–µ—Ç'}")
    
    if github_token == 'your_github_token_here':
        print("‚ùå GitHub —Ç–æ–∫–µ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ:")
        print("GITHUB_TOKEN=your_actual_token_here")
        return False
    
    if not os.path.exists(model_path):
        print(f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
        return False
    
    return True

def test_agent_import():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –∞–≥–µ–Ω—Ç–∞ v0.2"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –∞–≥–µ–Ω—Ç–∞ v0.2...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞ v0.2
        import sys
        sys.path.append('.')
        import agent_v02
        print("‚úÖ –ê–≥–µ–Ω—Ç v0.2 —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–µ–ª–∏
        model_path = "./models/yandex-gpt.gguf"
        if os.path.exists(model_path):
            print(f"‚úÖ –ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
        else:
            print(f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
            return False
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_agent_initialization():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞ v0.2"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞ v0.2...")
    
    try:
        import agent_v02
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        github_token = os.getenv('GITHUB_TOKEN', 'your_github_token_here')
        if github_token == 'your_github_token_here':
            print("‚ùå GitHub —Ç–æ–∫–µ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
            return False
        
        agent = agent_v02.TestAutomationAgent(
            github_token=github_token,
            jenkins_url="http://localhost:8080",
            jenkins_username="admin",
            jenkins_token="dummy_token",
            model_path="./models/yandex-gpt.gguf",
            github_username="johny19844",
            scenario_repo="johny19844/scenario",
            aft_repo="johny19844/AFT"
        )
        
        print("‚úÖ –ê–≥–µ–Ω—Ç v0.2 —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"üìÇ Scenario Repo: {agent.scenario_repo_name}")
        print(f"üìÇ AFT Repo: {agent.aft_repo_name}")
        print(f"ü§ñ Model Client: {type(agent.model_client).__name__}")
        print(f"üìä File Tracking: {len(agent.file_tracking)} files tracked")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def test_model_loading():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏...")
    
    try:
        import agent_v02
        
        model_client = agent_v02.GGUFModelClient("./models/yandex-gpt.gguf")
        
        if model_client.load_model():
            print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            test_prompt = "–ù–∞–ø–∏—à–∏ –ø—Ä–æ—Å—Ç–æ–π Java —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã"
            result = model_client.generate_text(test_prompt, max_tokens=100)
            
            if result:
                print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): {result[:200]}...")
            else:
                print("‚ö†Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è v0.2")
    print("=" * 60)
    
    tests = [
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_agent_configuration),
        ("–ò–º–ø–æ—Ä—Ç", test_agent_import),
        ("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è", test_agent_initialization),
        ("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏", test_model_loading)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüìã –¢–µ—Å—Ç: {test_name}")
        print("-" * 40)
        
        try:
            if test_func():
                print(f"‚úÖ {test_name} - –ü–†–û–ô–î–ï–ù")
                passed += 1
            else:
                print(f"‚ùå {test_name} - –ù–ï –ü–†–û–ô–î–ï–ù")
        except Exception as e:
            print(f"‚ùå {test_name} - –û–®–ò–ë–ö–ê: {e}")
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìù –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞ v0.2 –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("python agent_v0.2.py")
        print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
        print("README_IMPROVED.md")
        return True
    else:
        print("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        print("\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ GitHub —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        print("2. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –º–æ–¥–µ–ª—å –≤ ./models/yandex-gpt.gguf")
        print("3. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("4. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
